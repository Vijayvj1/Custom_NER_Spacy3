from collections import Counter
def find_most_common_value(float_list):
    counter = Counter(float_list)
    most_common_value, _ = counter.most_common(1)[0]
    return int(most_common_value)
    

def calculate_mean_near_value(float_list, target_value, range_tolerance):
    # Filter the values within the range tolerance of the target value
    matching_values = [value for value in float_list if abs(value - target_value) <= range_tolerance]

    # Calculate the mean of the matching values
    mean = sum(matching_values) / len(matching_values)

    return round(mean, 2)  # Round the mean to 2 decimal places

# Example usage
float_values = [3.5, 3.6, 3.7, 4, 8.8, 8.9, 8.0, 8.2, 8.3,8.8, 8.9, 8.0, 8.2, 8.3, 9]
target_value = find_most_common_value(float_values) 
print("Target  Value:",target_value)# Specify the target value
range_tolerance = 0.5  # Specify the range tolerance

mean_of_near_values = calculate_mean_near_value(float_values, target_value, range_tolerance)
print(mean_of_near_values)
